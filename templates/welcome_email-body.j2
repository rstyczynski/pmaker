Welcome {{ full_name }}!

Your access to {{ server_group }} has been granted as {{ username }}.
{%+ if password_access == "true"  %}
You may use password to authenticate. Password for authentication is sent by sms to your mobile at {{ mobile_number }}.
{% endif %}{%+ if key_access == "true" %}
Use private key to authenticate. Your private keys in openssh and putty formats are attached. Note that keys are encrypted, and must be decrypted before use. Below instruction stars with steps for Windows. If you are Linux user - scroll to Linux section.

===============
=== WINDOWS ===
===============

To decrypt ssh key do the following:
1. save file to %userprofile%\.ssh\id_rsa_{{ server_group }}.enc, where %userprofile% is your Windows home directory
2. install Git from https://git-scm.com/download/win; git is shipped with openssl which we need
3. start cmd.exe
4. "C:\Program Files\Git\mingw64\bin\openssl.exe" rsa -in %userprofile%\.ssh\id_rsa_{{ server_group }}.enc -out %userprofile%\.ssh\id_rsa_{{ server_group }}
5. once asked for password provide one from SMS for {{ server_group }} environment

To decrypt putty key do the following:
1. save file to %userprofile%\.ssh\id_rsa_{{ server_group }}.ppk, where %userprofile% is your Windows home directory
2. install Putty from https://www.putty.org
3. start puttygen.exe
4. using puttygen interface load %userprofile%\.ssh\id_rsa_{{ server_group }}.ppk
5. once asked for password provide one from SMS for {{ server_group }} environment
6. remove pass pharse from dialog box
7. save the key; confirm that you want to store key in decrypted form

{% endif %}
Access to {{ server_group }} servers is possible via bastion host: {{ jump_server }}. Assuming that you want to access {{ first_host }}, execute:
1. start cmd.exe
2. add key to ssh agent: ssh-add %userprofile%\.ssh\id_rsa_{{ server_group }}
3. connect to jump server: ssh -A {{ username }}@{{ jump_server }}
4. connect to target server: ssh {{ username }}@{{ first_host }}

You can further simplify ssh connection using .ssh/config

1. start cmd.xe
2. execute below script - copy/paste to cmd.exe session 
(
echo Host {{ server_group }}_jump
echo HostName {{ jump_server }}
echo user {{ username }}

echo Host {{ first_host }}
echo user {{ username }}
echo ProxyCommand  C:\Windows\System32\OpenSSH\ssh.exe -q -W %h:%p {{ server_group }}_jump
) >>%userprofile%\.ssh\config

3. connect to target server: ssh {{ first_host }}

If you are Putty user, follow publicly available guides how to use (a) pageant.exe, which is equivalent of ssh-agent, and (b) plink.exe which is equivalent of ProxyCommand.

=============
=== LINUX ===
=============

{%+ if password_access == "true"  %}
You may use password to authenticate. Password for authentication is sent by sms to your mobile at {{ mobile_number }}.
{% endif %}{%+ if key_access == "true" %}
You may use private key to authenticate. Your private encrypted openssh key is:

cat >~/.ssh/id_rsa_{{ server_group }}.enc <<EOF
{{ key_ssh_enc }}
{{ key_ssh_enc_stop }}
EOF
chmod 600 ~/.ssh/id_rsa_{{ server_group }}.enc
openssl rsa -in ~/.ssh/id_rsa_{{ server_group }}.enc -out ~/.ssh/id_rsa_{{ server_group }}
chmod 600 ~/.ssh/id_rsa_{{ server_group }}

, with password delivered via sms. Copy and paste above script to a terminal session. Once asked, provide password from sms to finalize decryption. Remember to store decrypted key in safe directory with private access only.
{% endif %}
Access to {{ server_group }} servers is possible via bastion host: {{ jump_server }}. 

When using ssh, remember to benefit from jump server support, and ssh-agent simplifying handling your keys. 

Assuming that you want to access {{ first_host }}, execute:

ssh-add -D
ssh-add ~/.ssh/id_rsa_{{ server_group }}
ssh -J {{ username }}@{{ jump_server }} {{ username }}@{{ first_host }}

To copy files to and from remote servers, execute:

ssh-add ~/.ssh/id_rsa_{{ server_group }}
touch test_file
scp -o 'ProxyJump {{ username }}@{{ jump_server }}' test_file {{ username }}@{{ first_host }}:~/
scp -o 'ProxyJump {{ username }}@{{ jump_server }}' {{ username }}@{{ first_host }}:~/test_file .

You can further simplify ssh connection using .ssh/config

1. open terminal 
2. execute below script - copy/paste to terminal session 
(
echo Host {{ server_group }}_jump
echo HostName {{ jump_server }}
echo user {{ username }}

echo Host {{ first_host }}
echo user {{ username }}
echo ProxyJump {{ server_group }}_jump
) >>~/.ssh/config

3. connect to target server: ssh {{ first_host }}
4. having config, you can copy in simplified way: scp test_file {{ username }}@{{ first_host }}:~/


Regards,
{{ admin }}

---
Generated on {{ date }} to be sent to {{ email }}.
If you are not the proper recipient, please delete this message.

