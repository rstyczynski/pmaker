---
- name: Create master pmaker 
  become: yes
  user:
    name: "{{ item.username }}"

- name: generate SSH key "{{ item.username }}"
  openssh_keypair:
    path: "{{ pmaker_home }}/.ssh/id_rsa"
    type: rsa
    size: 2048
    state: present
    force: no

#  Add key to authorized keys
- name: Ensure ~/.ssh/authorized_keys contains master pmakers's public key
  become: yes
  authorized_key:
    user: "{{ item.username }}"
    state: present
    exclusive: no
    manage_dir: yes
    key: "{{ lookup('file', '{{ pmaker_home }}/.ssh/id_rsa.pub') }}"
  register: authorized_keys_result

- name: tweak authorized_keys permissions
  become: yes
  file:
    dest: "/home/{{ item.username }}/.ssh/authorized_keys"
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: 0600

- name: tweak .ssh permissions
  become: yes
  file:
    dest: "/home/{{ item.username }}/.ssh"
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: 0700

# Configure local sshd, and restart sshd 
# TOOD move to computer cfg.
- name: remove account limit to use ssh 
  become: yes
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^\s*(AllowUsers.+)$'
    replace: '# \1'
  notify: restart sshd


#
# log key operations on .ssh registry
#
- name: Log key registration at host
  lineinfile:
     line: "{{ ansible_date_time.iso8601 }} | {{ inventory_hostname }} | REGISTERED | {{ authorized_keys_result.user }} | {{ authorized_keys_result.key }}"
     insertafter: EOF
     dest: "{{ pmaker_home }}/.ssh/registry"
     create: yes
  when: authorized_keys_result.state == 'present'
  
- name: Log failed key registration at host
  lineinfile:
     line: "{{ ansible_date_time.iso8601 }} | {{ inventory_hostname }} | FAILED | {{ authorized_keys_result.user }} | {{ authorized_keys_result.key }}"
     insertafter: EOF
     dest: "{{ pmaker_home }}/.ssh/registry"
     create: yes
  when: authorized_keys_result is failed

# - name: create pmaker directory
#   become: yes
#   file:
#     path: /opt/{{ item.username }}/.ssh
#     state: directory
#     owner: "{{ item.username }}"
#     mode: u+r,g-w+x,o+x
#     recurse: yes

# - name: copy pmaker key to pmaker_home directory
#   become: yes
#   copy:
#     src: "/home/{{ item.username }}/.ssh/id_rsa.pub"
#     dest: /opt/{{ item.username }}/.ssh
#     remote_src: yes

# - name: make key private
#   become: yes
#   file:
#     path: /opt/{{ item.username }}/.ssh/id_rsa.pub
#     state: file
#     owner: "{{ item.username }}"
#     group: "{{ item.username }}"
#     mode: u+r,g-w+r,o+r
