---
- name: Create  user
  become: yes
  user:
    name: "{{ item.username }}"

- name: check if /home/{{ item.username }}/.ssh file exists
  become: yes
  stat: 
    path: /home/{{ item.username }}/.ssh
  register: ssh_available

- name: check if /home/{{ item.username }}/.ssh/authorized_keys file exists
  become: yes
  stat: 
    path: /home/{{ item.username }}/.ssh/authorized_keys
  register: authorized_keys_available

# - name: Protect .ssh
#   become: yes
#   file:
#     path: /home/{{ item.username }}/.ssh
#     attributes: -i
#   when: ssh_available.stat.exists

# - name: Protect authorized_keys
#   become: yes
#   file:
#     path: /home/{{ item.username }}/.ssh/authorized_keys
#     attributes: -i
#   when: authorized_keys_available.stat.exists

- name: Ensure ~/.ssh/authorized_keys contains user's public key
  become: yes
  authorized_key:
    user: "{{ item.username }}"
    state: present
    exclusive: no
    manage_dir: yes
    key: "{{ lookup('file', '/opt/pmaker/{{ server_group }}/{{ item.username }}/.ssh/id_rsa.pub') }}"

# - name: Protect authorized_keys
#   become: yes
#   file:
#     path: /home/{{ item.username }}/.ssh/authorized_keys
#     attributes: +i

# - name: Protect .ssh
#   become: yes
#   file:
#     path: /home/{{ item.username }}/.ssh
#     attributes: +i

