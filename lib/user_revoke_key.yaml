---
# - name: Protect .ssh
#   become: yes
#   file:
#     path: /home/{{ item.username }}/.ssh
#     attributes: -i
#   when: ssh_available.stat.exists

# - name: Protect authorized_keys
#   become: yes
#   file:
#     path: /home/{{ item.username }}/.ssh/authorized_keys
#     attributes: -i
#   when: authorized_keys_available.stat.exists


#
# mark key to be revoked for given user at given host
#

- name: check if key is already revoked
  block:
  
  - name: check if key is already revoked
    stat: 
      path: '{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/servers/{{ inventory_hostname }}/id_rsa.revoked'
    register: revoked_file_check

  - name: check if key should be revoked
    stat: 
      path: '{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/id_rsa.revoke'
    register: revoke_file_check

  - name: check if key revoke is already known at server
    stat: 
      path: '{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/servers/{{ inventory_hostname }}/id_rsa.revoke'
    register: revoke_at_server_file_check

  - name: Ensure {{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/servers dir exists
    file: path={{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/servers/{{ inventory_hostname }} state=directory
  
  # TODO How about when revoke file oes not exist, but exists at server?

  - name: Register key to be revoked
    command: cp {{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/id_rsa.revoke '{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/servers/{{ inventory_hostname }}/id_rsa.revoke'
    when: (revoke_file_check.stat.exists == true) and (revoked_file_check.stat.exists == false) and (revoke_at_server_file_check.stat.exists == false) 
  delegate_to: 127.0.0.1

#
# check if revoke should be started
#
- name: check if key should be revoked
  stat: 
    path: '{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/servers/{{ inventory_hostname }}/id_rsa.revoke'
  register: revoke_file
  delegate_to: 127.0.0.1

- name: debug
  debug:
    msg: "{{ revoke_file }}"

- name: Ensure pmaker ~/.ssh/authorized_keys contains pmaker's public key
  become: yes
  authorized_key:
    user: "{{ item.username }}"
    state: absent
    exclusive: no
    manage_dir: yes
    key: "{{ lookup('file', '{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/servers/{{ inventory_hostname }}/id_rsa.revoke') }}"
  register: authorized_keys_result
  when: revoke_file.stat.exists == true

- name: Perform post revoke procedure
  block:
  - name: debug
    debug:
      msg: "{{ authorized_keys_result }}"

  - name: Log key revoke at host
    lineinfile:
      line: "{{ ansible_date_time.iso8601 }} | {{ inventory_hostname }} | REVOKED | {{ authorized_keys_result.user }} | {{ authorized_keys_result.key }}"
      insertafter: EOF
      dest: "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/registry"
      create: yes
    when: authorized_keys_result.changed == true

  - name: rename revoked key 
    command: mv '{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/servers/{{ inventory_hostname }}/id_rsa.revoke' '{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/servers/{{ inventory_hostname }}/id_rsa.revoked'

  - name: Log failed key revoke at host
    lineinfile:
      line: "{{ ansible_date_time.iso8601 }} | {{ inventory_hostname }} | REVOKE FAILED | {{ authorized_keys_result.user }} | {{ authorized_keys_result.key }}"
      insertafter: EOF
      dest: "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/registry"
      create: yes
    when: authorized_keys_result is failed

  - name: Log skipped key revoke at host
    lineinfile:
      line: "{{ ansible_date_time.iso8601 }} | {{ inventory_hostname }} | REVOKE CONFIRMED | {{ authorized_keys_result.user }} | {{ authorized_keys_result.key }}"
      insertafter: EOF
      dest: "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/registry"
      create: yes
    when: authorized_keys_result.changed == false

  when: revoke_file.stat.exists == true
  delegate_to: 127.0.0.1


# - name: Protect authorized_keys
#   become: yes
#   file:
#     path: /home/{{ item.username }}/.ssh/authorized_keys
#     attributes: +i

# - name: Protect .ssh
#   become: yes
#   file:
#     path: /home/{{ item.username }}/.ssh
#     attributes: +i

