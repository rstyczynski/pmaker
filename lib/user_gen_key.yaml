---
- name: create user directory
  file:
    path: "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh"
    state: directory
    owner: "pmaker"
    mode: u+r

- name: generate SSH key "{{ item.username }}"
  openssh_keypair:
    path: "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/id_rsa"
    type: rsa
    size: 4096
    state: present
    force: no

- name: Check if key password file exists i.e. password already generated
  stat: 
    path: "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/secret.key"
  register: key_password_created

- name: Generate key password
  become: no
  local_action: command pwgen --symbols --numerals --capitalize --ambiguous 15
  when: key_password_created.stat.exists == False
  register: pwgen

- name: Save key password locally
  become: no
  local_action: copy content={{ pwgen.stdout }} dest="{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/secret.key"
  when: key_password_created.stat.exists == False

- name: encrypting the key
  become: no
  local_action: command openssl rsa -aes256 -in "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/id_rsa"  -out "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/id_rsa.enc" -passout "pass:{{ pwgen.stdout }}"
  when: key_password_created.stat.exists == False
  register: openssl

- name: converting the key to putyt format
  become: no
  local_action: command puttygen "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/id_rsa"  -o "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/id_rsa.ppk" -O private --new-passphrase "{{ pmaker_home }}/state/{{ user_group }}/{{ server_group }}/{{ item.username }}/.ssh/secret.key" 
  when: key_password_created.stat.exists == False
  register: puttygen
